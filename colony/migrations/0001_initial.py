# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-08-06 23:28
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, unique=True)),
                ('notes', models.CharField(blank=True, max_length=100, null=True)),
                ('defunct', models.BooleanField(default=False)),
                ('location', models.IntegerField(choices=[(0, '1710'), (1, '1702'), (2, 'Behavior')], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Genotype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Mouse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15, unique=True)),
                ('sex', models.IntegerField(choices=[(0, 'M'), (1, 'F'), (2, '?')])),
                ('sack_date', models.DateField(blank=True, null=True, verbose_name='sac date')),
                ('breeder', models.BooleanField(default=False)),
                ('notes', models.CharField(blank=True, max_length=100, null=True)),
                ('manual_dob', models.DateField(blank=True, null=True, verbose_name='DOB override')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.CharField(max_length=150)),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_to', to='colony.Person')),
            ],
        ),
        migrations.CreateModel(
            name='Litter',
            fields=[
                ('breeding_cage', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='colony.Cage')),
                ('date_mated', models.DateField(blank=True, null=True, verbose_name='parents mated')),
                ('dob', models.DateField(blank=True, null=True, verbose_name='date of birth')),
                ('date_toeclipped', models.DateField(blank=True, null=True, verbose_name='toe clip')),
                ('date_weaned', models.DateField(blank=True, null=True, verbose_name='weaned')),
                ('date_checked', models.DateField(blank=True, null=True, verbose_name='last checked')),
                ('notes', models.CharField(blank=True, max_length=100, null=True)),
                ('pcr_info', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='task',
            name='cages',
            field=models.ManyToManyField(blank=True, to='colony.Cage'),
        ),
        migrations.AddField(
            model_name='task',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_by', to='colony.Person'),
        ),
        migrations.AddField(
            model_name='mouse',
            name='cage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='colony.Cage'),
        ),
        migrations.AddField(
            model_name='mouse',
            name='genotype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='colony.Genotype'),
        ),
        migrations.AddField(
            model_name='mouse',
            name='manual_father',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mmf', to='colony.Mouse'),
        ),
        migrations.AddField(
            model_name='mouse',
            name='manual_mother',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mmm', to='colony.Mouse'),
        ),
        migrations.AddField(
            model_name='mouse',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='colony.Person'),
        ),
        migrations.AddField(
            model_name='cage',
            name='proprietor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='colony.Person'),
        ),
        migrations.AddField(
            model_name='mouse',
            name='litter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='colony.Litter'),
        ),
        migrations.AddField(
            model_name='litter',
            name='father',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bc_father', to='colony.Mouse'),
        ),
        migrations.AddField(
            model_name='litter',
            name='mother',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bc_mother', to='colony.Mouse'),
        ),
        migrations.AddField(
            model_name='litter',
            name='proprietor',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='colony.Person'),
        ),
    ]
